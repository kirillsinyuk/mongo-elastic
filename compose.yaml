version: "3.8"

services:
  elasticsearch:
    image: 'bitnami/elasticsearch:latest'
    environment:
      - 'ELASTICSEARCH_USERNAME=elastic'
      - 'ELASTICSEARCH_PASSWORD=secretpwd'
      - 'discovery.type=single-node'
    ports:
      - '9200:9200'

  mongo1:
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    environment:
      MONGO_INITDB_DATABASE: order
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  monstache:
    image: rwynn/monstache:latest
    working_dir: /app
    command: -f ./monstache.config.toml
    volumes:
      - $PWD/monstache.config.toml:/app/monstache.config.toml
    depends_on:
      - mongo1
      - elasticsearch
    labels:
      org.springframework.boot.readiness-check.tcp.disable: true
    ports:
      - '8081:8081'

volumes:
  mongo1_data:
  mongo1_config:
